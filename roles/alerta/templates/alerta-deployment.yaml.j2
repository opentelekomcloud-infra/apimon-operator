apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  annotations: 
    config_revision : "{{ config_revision }}"
  labels:
    run: "{{ name }}"
  name: "{{ name }}"
spec:
  replicas: {{ replicas }}
  selector:
    matchLabels:
      run: "{{ name }}"
  strategy: {}
  template:
    metadata:
      annotations: 
        config_revision : "{{ config_revision }}"
      creationTimestamp: null
      labels:
        run: "{{ name }}"
    spec:
      hostAliases:
{% if ldap_server_ip is defined and ldap_server_ip|length and 
      ldap_server_name is defined and ldap_server_name|length %}
      - ip: "{{ ldap_server_ip }}"
        hostnames:
        - "{{ ldap_server_name }}"
{% endif %}
      containers:
      - image: "{{ image }}"
        name: "{{ name }}"
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /login
            scheme: HTTP
            port: 8080
        livenessProbe:
          httpGet:
            path: /login
            scheme: HTTP
            port: 8080
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: run
                    operator: In
                    values:
                    - "{{ name }}"
                topologyKey: kubernetes.io/hostname
{% if alerta_secret_exists is defined and alerta_secret_exists|length %}
        envFrom:
        - secretRef:
            name: {{ secret }}
{% endif %}
        volumeMounts:
{% if alerta_config_exists is defined and alerta_config_exists|length %}
        - name: alerta-config
          mountPath: /etc/alertad.conf
          subPath: alertad.conf
{% endif %}
      volumes:
{% if alerta_config_exists is defined and alerta_config_exists|length %}
      - configMap:
          name: "{{ config }}"
        name: alerta-config
{% endif %}
status: {}
